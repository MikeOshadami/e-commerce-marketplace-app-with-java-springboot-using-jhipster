/** Database Schema Design */

entity Store {
    name String required unique,
    description String,
    storeUrl String,
    logoUrl String,
    bannerUrl String,
    contactEmail String,
    contactPhone String,
    contactAddress String,
    alias String required unique,
    status Status required,
    dateCreated Instant required
    }

entity StoreCategory {
    name String required unique,
    description String required,
    status Status required,
    dateCreated Instant required
}

/** Product sold by the Online store */
entity Product {
    name String required,
    description String,
    price BigDecimal required min(0)
    itemSize Size,
    stock Integer,
    imageUrl String,
    dateCreated Instant required
}

enum Size {
    S, M, L, XL, XXL
}

entity ProductCategory {
    name String required
    description String,
    dateCreated Instant required
}

enum Status{
    ACTIVE, INACTIVE
}

enum OrderStatus {
    REFUND_INITIATED, REFUND_FAILED, PAID, PENDING, OPEN, CANCELLED, REFUNDED
}


relationship OneToOne {
    //StoreCategory{store} to Store{storeCategory required}
    Store{storeCategory} to StoreCategory{store required}
   // Store{cart} to StoreCategory{customerDetails required},
}

relationship OneToMany {
   // CustomerDetails{cart} to ShoppingCart{customerDetails required},
   // ShoppingCart{order} to ProductOrder{cart required},
    ProductCategory{product} to Product{productCategory(name) required}
    Store{productCategory} to ProductCategory{store(name) required}
    Store{product} to Product{store(name) required}
}

// Set pagination options
paginate * with pagination

 dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix

filter *
